CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

include(CMakeForceCompiler)

SET(CMAKE_SYSTEM_NAME SegaSaturn)

if (WIN32)
	set(SH_ELF_PATHS 
		"[HKEY_LOCAL_MACHINE\\SOFTWARE\\KPIT\\GNUSH v12.02-ELF;Path]/sh-elf/bin"
		"[HKEY_LOCAL_MACHINE\\SOFTWARE\\KPIT Cummins\\GNUSH v10.02-ELF;Path]/sh-elf/bin")
else (WIN32)	        
	set(SH_ELF_PATHS "")
endif (WIN32)

find_program(SH_ELF_GCC
	NAMES sh-elf-gcc
	PATHS
		${SH_ELF_PATHS})

find_program(SH_ELF_GPP
	NAMES sh-elf-g++
	PATHS
		${SH_ELF_PATHS})
		
# Specify the cross compiler.
CMAKE_FORCE_C_COMPILER(${SH_ELF_GCC} GNU)
CMAKE_FORCE_CXX_COMPILER(${SH_ELF_GPP} GNU)
SET(CMAKE_FIND_ROOT_PATH /usr/local/share/sh-elf/bin)

PROJECT(iapetus)

#CONFIGURE_FILE(config.h.cmake config.h)

set(IAPETUS_VERSION_MAJOR 0)
set(IAPETUS_VERSION_MINOR 1)
set(IAPETUS_VERSION_PATCH 0)
set(IAPETUS_VERSION "${IAPETUS_VERSION_MAJOR}.${IAPETUS_VERSION_MINOR}.${IAPETUS_VERSION_PATCH}")

set(CPACK_SOURCE_GENERATOR TGZ)
set(CPACK_PACKAGE_VERSION_MAJOR ${IAPETUS_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${IAPETUS_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${IAPETUS_VERSION_PATCH})
set(CPACK_PACKAGE_VENDOR "Theo Berkau")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/COPYING")
set(CPACK_SOURCE_PACKAGE_FILE_NAME "iapetus-${IAPETUS_VERSION}")
include(CPack)

SET(CMAKE_CONFIGURATION_TYPES Release)
add_subdirectory(doc)
add_subdirectory(src)
